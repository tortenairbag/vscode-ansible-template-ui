#bodyWebview {
  display: flex;
  flex-direction: column;
}

#btnRender {
  width: fit-content;
}

@media screen and (min-width: 1024px) {
  #bodyWebview {
    padding: 0 8rem;
    max-width: 1024px;
    margin: 0 auto;
  }
}

.containerVertical {
  display: grid;
  grid-auto-flow: row;
  grid-row-gap: 1.5rem;
  grid-template-columns: 100%;
  width: 100%;
}

.containerHorizontal {
  display: flex;
  width: 100%;
  align-items: flex-start;
}

.containerHorizontal .containerFill, .containerHorizontal .cm-editor {
  flex: 1 1;
}

.cm-editor {
  border: 1px solid var(--vscode-input-border);
  height: 8rem;
  overflow: hidden;
  resize: vertical;
}

.cm-placeholder, .cm-highlightSpace {
  opacity: 0.5;
}

.placeholderCodeMirror {
  display: none;
}

.cm-editor.parserError {
  border: 1px solid var(--vscode-inputValidation-errorBorder);
}

.errorBox {
  background-color: var(--vscode-statusBarItem-errorBackground);
  border-radius: 2px;
  color: var(--vscode-statusBarItem-errorForeground);
  padding: var(--button-padding-vertical) var(--button-padding-horizontal);
}

.errorBox.hidden, .messageBox.hidden, #divProfiles.hidden {
  display: none;
}

.messageBox > * {
  align-self: center;
}

.containerHorizontal > *:not(:last-child), .messageBox > *:not(:last-child) {
  margin-right: 0.5rem;
}

.resultType {
  grid-row-gap: 0.5rem;
  width: unset;
}

.resultType span.inactive {
  opacity: 0.3;
}

.cm-completionInfo {
  overflow: hidden;
}

.cm-completionInfo .wrapper {
  display: block;
}

.cm-completionInfo .code {
  font-family: monospace;
  background-color: rgba(0, 0, 0, 0.5);
  white-space: pre-wrap;
}
